stages:
  - prepare
  - build
  - test
  - image

variables:
  GIT_DEPTH: 5
  GIT_SUBMODULE_STRATEGY: recursive

prepare packages:
  stage: prepare
  image: $CI_REGISTRY/disciplinas1/mc426/projeto/base:latest
  script:
    - swift package resolve
  cache:
    key: build-folder
    paths:
      - .build

build release:
  stage: build
  image: $CI_REGISTRY/disciplinas1/mc426/projeto/base:latest
  script:
    - swift build -c release
  cache:
    key: build-folder
    paths:
      - .build
  needs: ["prepare packages"]

build debug:
  stage: build
  image: $CI_REGISTRY/disciplinas1/mc426/projeto/base:latest
  script:
    - swift build -c debug
  cache:
    key: build-folder
    paths:
      - .build
  needs: ["prepare packages"]

test release:
  stage: test
  image: $CI_REGISTRY/disciplinas1/mc426/projeto/base:latest
  script:
    - LOG_LEVEL=debug swift test -c release
  cache:
    key: build-folder
    paths:
      - .build
    policy: pull
  needs: ["build release"]

test debug:
  stage: test
  image: $CI_REGISTRY/disciplinas1/mc426/projeto/base:latest
  script:
    - LOG_LEVEL=debug swift test -c debug
  cache:
    key: build-folder
    paths:
      - .build
    policy: pull
  needs: ["build debug"]

build server image:
  stage: image
  image: docker:latest
  tags:
    - docker
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cp "$(swift build -c release --show-bin-path)/Run" "$PWD/Run"
    - docker build -t $CI_REGISTRY/disciplinas1/mc426/backend/server:latest --build-arg EXECUTABLE="$PWD/Run"  .
    - docker push $CI_REGISTRY/disciplinas1/mc426/backend/server:latest
  cache:
    key: build-folder
    paths:
      - .build
    policy: pull
  needs: ["build release"]
